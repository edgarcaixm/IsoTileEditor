var dom = fl.getDocumentDOM();var library = dom.library;fl.outputPanel.clear();//-----------------------------------// Library Document managment//-----------------------------------function newLibrary() {	var templateURI = fl.configURI + "WindowSWF/base_lib.fla";		var path = fl.browseForFolderURL();	var filename = prompt("Library Filename");	var newFileURI = path + "/" + filename + ".fla";		FLfile.copy(templateURI, newFileURI);	fl.openDocument(newFileURI);	}function getLibraryName() {	return dom.getDataFromDocument("libraryName");}function setLibraryName(newLibraryName) {	dom.addDataToDocument("libraryName", "string", String(newLibraryName));	cleanse_library();}function exportLibrary() {	cleanse_library();	// gather actionscript meta data from library assets	var str = "var libraryID:String = \""+dom.getDataFromDocument("libraryName")+"\";\n";	str += "var tiles:Array = [\n\t";	for (var i=0; i<library.items.length; i++) {		var tItem = library.items[i];		if (parseInt(tItem.getData("isAsset")) == 1) {			var tID = tItem.getData("tileID");			var tRows = tItem.getData("rows");			var tCols = tItem.getData("cols");			str += "{tileID:\""+tID+"\", rows:"+tRows+", cols:"+tCols+", classRef:\""+tItem.linkageClassName;+"\"}";			if (i < library.items.length-1) {				str += ", \n\t";			}		}	}	str += "\n];";	// store meta data to first frame of swf for export	var asFrame = fl.getDocumentDOM().timelines[0].layers[0].frames[0];	asFrame.actionScript = str;	dom.exportSWF();	asFrame.actionScript = ""; // cleanup}//-----------------------------------// Tile asset managment//-----------------------------------function onCreateNewTile(tileID, rows, cols) {	dom.selectNone();	library.selectNone();	var libID = dom.getDataFromDocument("libraryName");	var className = libID + "_" + tileID; // full reference that will appear in library	// assure that the tile has a unique name	if (library.itemExists(tileID)) {		alert("Tile name already in use.");		return;	}	// create the item in the library	library.duplicateItem("_templates/_basetile");	library.moveToFolder("/", "_templates/_basetile copy", false);		var tItem = library.items[library.findItemIndex("_basetile copy")];	// add class props	tItem.name = tileID;	tItem.linkageExportForAS = true;	tItem.linkageExportInFirstFrame = true;	tItem.linkageClassName = className;	tItem.linkageBaseClass = "flash.display.Sprite";	// store persistent data in item	tItem.addData("isAsset", "integer", Number(1));	tItem.addData("tileID", "string", String(tileID));	tItem.addData("rows", "integer", Number(rows));	tItem.addData("cols", "integer", Number(cols));	// add item to stage for editing	var xpos = Math.ceil(dom.width * Math.random());	var ypos = Math.ceil(dom.height * Math.random());	// display on stage for editing	library.addItemToDocument({x:xpos, y:ypos}, tItem.name);}function updateTileID(newTileID) {	var libID = dom.getDataFromDocument("libraryName");	var className = libID + "_" + newTileID;	if (library.itemExists(newTileID)) {		alert("Tile name already in use.");		return;	}	if (dom.selection.length == 1) {		var tItem = dom.selection[0].libraryItem;		tItem.name = newTileID;		tItem.linkageClassName = className;		tItem.addData("tileID", "string", String(newTileID));			} else if (dom.selection.length > 1) {		alert("Too many items selected.  Only select one item to update.");	}}function updateTileValues(newRows, newCols) {	if (dom.selection.length == 1) {		var tItem = dom.selection[0].libraryItem;		tItem.addData("rows", "integer", Number(newRows));		tItem.addData("cols", "integer", Number(newCols));	} else if (dom.selection.length > 1) {		alert("Too many items selected.  Only select one item to update.");	}}//-----------------------------------// utility functions//-----------------------------------function cleanse_library() {	// updates all the library items names and classIDs in case any manual edits have been made.	if (library.items.length == 0) {		// no items to update		return;	}	for (var i=0; i<library.items.length; i++) {		var tItem = library.items[i];		if (tItem.hasData("isAsset")) {			var tID = tItem.getData("tileID");			tItem.name = tID;			tItem.linkageClassName = dom.getDataFromDocument("libraryName") +"_"+ tID;		}	}}